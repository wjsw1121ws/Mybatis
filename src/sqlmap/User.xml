<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wcc.mybatis.pojo.User">
    <!--根据id用户-->
    <select id="findUserById" parameterType="Integer" resultType="com.wcc.mybatis.pojo.User">
        <!--使用#{}占位符的方式,里面value的值可以随意写-->
        select * from user where id = #{value}
    </select>

    <!--模糊用户名查询用户-->
    <select id="findUserByUsername" parameterType="String" resultType="com.wcc.mybatis.pojo.User">
        <!--使用字符串拼接的方式${}里面的值只能是value-->
        <!--    select * from user where username like '%${value}%' -->
        <!--使用占位符来写-->
        select * from user where username like "%"#{v}"%"
    </select>

    <!--插入用户-->
    <insert id="saveUser" parameterType="com.wcc.mybatis.pojo.User">
        <!-- selectKey 标签实现主键返回 -->
        <!-- keyColumn:主键对应的表中的哪一列 -->
        <!-- keyProperty：主键对应的pojo中的哪一个属性 -->
        <!-- order：设置在执行insert语句前执行查询id的sql，还是在执行insert语句之后执行查询id的sql -->
        <!-- resultType：设置返回的id的类型 -->
        <selectKey resultType="Integer" order="AFTER">
            select LAST_INSET_ID from user
        </selectKey>
        insert into user (username, birthday, sex, address)  values (#{username},#{birthday},#{sex},#{address})
</insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="com.wcc.mybatis.pojo.User">
        update user set
        username = #{username}, birthday = #{birthday},sex = #{sex},address = #{address} where id = #{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUserById" parameterType="Integer">
        delete from user where id = #{id}
    </delete>
</mapper>